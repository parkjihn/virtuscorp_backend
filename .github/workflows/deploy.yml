name: Deploy VirtusCorp

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  build_and_push:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t virtuscorp_backend:latest ./virtuscorp_backend
          docker tag virtuscorp_backend:latest ${{ secrets.DOCKER_USERNAME }}/virtuscorp_backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/virtuscorp_backend:latest

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Copy docker-compose file to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "/home/deploy/www"

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy on Server
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            set -e
            docker login -u "${{ secrets.DOCKER_USERNAME }}" --password "${{ secrets.DOCKER_PASSWORD }}"
            cd /home/deploy/www
            
            # Create network if it doesn't exist
            docker network create --driver overlay --attachable virtuscorp_network  true
            
            # Update secrets if needed (create them if they don't exist)
            echo "${{ secrets.DB_PASSWORD }}" | docker secret create db_password -  echo "Secret db_password already exists"
            echo "${{ secrets.DB_URL }}" | docker secret create db_url - || echo "Secret db_url already exists"
            
            # Deploy stack
            docker stack deploy -c docker-compose.yml virtuscorp_stack --with-registry-auth
            
            # Clean up
            docker system prune -f
          EOF
